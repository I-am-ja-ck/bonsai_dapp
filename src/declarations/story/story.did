type StoryWithLikes = 
 record {
   likes: nat;
   story: Story;
 };
type Story = 
 record {
   address: text;
   story: text;
   summary: text;
   title: text;
 };
type Result_3 = 
 variant {
   err;
   ok: StoryWithLikes;
 };
type Result_2 = 
 variant {
   err: text;
   ok: StoryWithLikes;
 };
type Result_1 = 
 variant {
   err: text;
   ok: KontributeVotes;
 };
type Result = 
 variant {
   err: text;
   ok: text;
 };
type KontributeVotes = 
 record {
   claimed: bool;
   votes: nat;
 };
service : {
  add: (Story) -> (Result_3);
  claim: () -> (Result_1);
  delete: (text) -> (Result_2);
  get: (text) -> (Result_2) query;
  getMyVotes: () -> (Result_1) query;
  like: (text) -> (Result);
}
